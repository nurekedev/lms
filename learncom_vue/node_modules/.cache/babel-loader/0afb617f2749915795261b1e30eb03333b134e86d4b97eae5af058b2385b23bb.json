{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"field\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\"\n}, \"Name\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"control\"\n};\nconst _hoisted_4 = {\n  class: \"field\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\"\n}, \"Content\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"control\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"field\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"control\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"button is-link\"\n}, \"submit\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers($event => $options.submitComment(), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment.name]])])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"textarea\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.comment.content = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment.content]])])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.errors, error => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"notification is-danger\",\n      key: error\n    }, _toDisplayString(error), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_7], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","onSubmit","_cache","_withModifiers","$event","$options","submitComment","_hoisted_1","_hoisted_2","_hoisted_3","$data","comment","name","_hoisted_4","_hoisted_5","_hoisted_6","content","_Fragment","_renderList","_ctx","errors","error","key","_hoisted_7"],"sources":["/Users/nurzhansaktaganov/Desktop/LMS/learncom_vue/src/components/AddCommentComponent.vue"],"sourcesContent":["<template>\n    <form v-on:submit.prevent=\"submitComment()\">\n        <div class=\"field\">\n            <label class=\"label\">Name</label>\n            <div class=\"control\">\n                <input type=\"text\" class=\"input\" v-model=\"comment.name\">\n            </div>\n        </div>\n\n        <div class=\"field\">\n            <label class=\"label\">Content</label>\n            <div class=\"control\">\n                <textarea class=\"textarea\" v-model=\"comment.content\"></textarea>\n            </div>\n        </div>\n\n        <div class=\"notification is-danger\" v-for=\"error in errors\" v-bind:key=\"error\">\n            {{ error }}\n        </div>\n\n        <div class=\"field\">\n            <div class=\"control\">\n                <button type=\"submit\" class=\"button is-link\">submit</button>\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\nimport axios from 'axios';\n\n\nexport default {\n    props: [\n        'course', 'activeLesson',\n    ],\n\n    data() {\n        return {\n            comment: {\n                name: ' ',\n                comment: ' ',\n            },\n            error: [\n\n            ]\n        }\n    },\n\n    methods: {\n        submitComment() {\n            console.log(\"submit comment\")\n\n            this.errors = []\n\n            if (this.comment.name === '') {\n                this.errors.push('The name must be filled out')\n            }\n\n            if (this.comment.content === '') {\n                this.errors.push('The content must be filled out')\n            }\n\n            if (!this.errors.length) {\n                axios\n                    .post(`api/v1/courses/${this.$route.params.slug}/${this.activeLesson.slug}/`, this.comment)\n                    .then(response => {\n                        this.comment.name = ''\n                        this.comment.content = ''\n\n                        this.$emit('submitComment', response.data)\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n            }\n        },\n\n    }\n}\n</script>"],"mappings":";;EAEaA,KAAK,EAAC;AAAO;gCACdC,mBAAA,CAAiC;EAA1BD,KAAK,EAAC;AAAO,GAAC,MAAI;;EACpBA,KAAK,EAAC;AAAS;;EAKnBA,KAAK,EAAC;AAAO;gCACdC,mBAAA,CAAoC;EAA7BD,KAAK,EAAC;AAAO,GAAC,SAAO;;EACvBA,KAAK,EAAC;AAAS;gCASxBC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAO,I,aACdC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAS,I,aAChBC,mBAAA,CAA4D;EAApDC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAiB,QAAM,E;;;uBArB/DG,mBAAA,CAwBO;IAxBIC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAAC,MAAA,IAAUC,QAAA,CAAAC,aAAa;MACpCR,mBAAA,CAKM,OALNS,UAKM,GAJFC,UAAiC,EACjCV,mBAAA,CAEM,OAFNW,UAEM,G,gBADFX,mBAAA,CAAwD;IAAjDC,IAAI,EAAC,MAAM;IAACF,KAAK,EAAC,OAAO;+DAAUa,KAAA,CAAAC,OAAO,CAACC,IAAI,GAAAR,MAAA;iDAAZM,KAAA,CAAAC,OAAO,CAACC,IAAI,E,OAI9Dd,mBAAA,CAKM,OALNe,UAKM,GAJFC,UAAoC,EACpChB,mBAAA,CAEM,OAFNiB,UAEM,G,gBADFjB,mBAAA,CAAgE;IAAtDD,KAAK,EAAC,UAAU;+DAAUa,KAAA,CAAAC,OAAO,CAACK,OAAO,GAAAZ,MAAA;iDAAfM,KAAA,CAAAC,OAAO,CAACK,OAAO,E,0BAI3DhB,mBAAA,CAEMiB,SAAA,QAAAC,WAAA,CAF8CC,IAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhDrB,mBAAA,CAEM;MAFDH,KAAK,EAAC,wBAAwB;MAAgCyB,GAAG,EAAED;wBACjEA,KAAK;kCAGZE,UAIM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}